<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\OBJECT\Project.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\OBJECT\Project.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060061: Last Updated: Mon Jan 09 14:42:26 2017
<BR><P>
<H3>Maximum Stack Usage =         92 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
Cap1214_Init &rArr; Cap1214_LL_Init &rArr; I2C_Init &rArr; RCC_GetClocksFreq
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1c]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">ADC1_2_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1c]">ADC1_2_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from stm32f10x_it.o(i.BusFault_Handler) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[1f]">CAN1_RX1_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[20]">CAN1_SCE_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[4b]">Cap1214_CheckBuf</a> from cap1214.o(i.Cap1214_CheckBuf) referenced from cap1214.o(.data)
 <LI><a href="#[4d]">Cap1214_ClearBuf</a> from cap1214.o(i.Cap1214_ClearBuf) referenced from cap1214.o(.data)
 <LI><a href="#[49]">Cap1214_DeInit</a> from cap1214.o(i.Cap1214_DeInit) referenced from cap1214.o(.data)
 <LI><a href="#[4c]">Cap1214_GetBuf</a> from cap1214.o(i.Cap1214_GetBuf) referenced from cap1214.o(.data)
 <LI><a href="#[4e]">Cap1214_ISR</a> from cap1214.o(i.Cap1214_ISR) referenced from cap1214.o(.data)
 <LI><a href="#[48]">Cap1214_Init</a> from cap1214.o(i.Cap1214_Init) referenced from cap1214.o(.data)
 <LI><a href="#[4a]">Cap1214_ReadID</a> from cap1214.o(i.Cap1214_ReadID) referenced from cap1214.o(.data)
 <LI><a href="#[15]">DMA1_Channel1_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[16]">DMA1_Channel2_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[17]">DMA1_Channel3_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[18]">DMA1_Channel4_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[19]">DMA1_Channel5_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[1a]">DMA1_Channel6_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[1b]">DMA1_Channel7_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from stm32f10x_it.o(i.DebugMon_Handler) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[10]">EXTI0_IRQHandler</a> from stm32f10x_it.o(i.EXTI0_IRQHandler) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[32]">EXTI15_10_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[11]">EXTI1_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[12]">EXTI2_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[13]">EXTI3_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[14]">EXTI4_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[21]">EXTI9_5_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from stm32f10x_it.o(i.HardFault_Handler) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[2a]">I2C1_ER_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[29]">I2C1_EV_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[2c]">I2C2_ER_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[2b]">I2C2_EV_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from stm32f10x_it.o(i.MemManage_Handler) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from stm32f10x_it.o(i.NMI_Handler) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[b]">PVD_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from stm32f10x_it.o(i.PendSV_Handler) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[f]">RCC_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[33]">RTCAlarm_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[d]">RTC_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[2d]">SPI1_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[2e]">SPI2_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from stm32f10x_it.o(i.SVC_Handler) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from stm32f10x_it.o(i.SysTick_Handler) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[36]">SystemInit</a> from system_stm32f10x.o(i.SystemInit) referenced from startup_stm32f10x_md.o(.text)
 <LI><a href="#[c]">TAMPER_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[22]">TIM1_BRK_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[25]">TIM1_CC_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[24]">TIM1_TRG_COM_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[23]">TIM1_UP_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[26]">TIM2_IRQHandler</a> from stm32f10x_it.o(i.TIM2_IRQHandler) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[27]">TIM3_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[28]">TIM4_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[42]">Touch_Clear</a> from touch.o(i.Touch_Clear) referenced from touch.o(i.Touch_Init)
 <LI><a href="#[41]">Touch_ClearDoublePress</a> from touch.o(i.Touch_ClearDoublePress) referenced from touch.o(i.Touch_Init)
 <LI><a href="#[40]">Touch_ClearHold</a> from touch.o(i.Touch_ClearHold) referenced from touch.o(i.Touch_Init)
 <LI><a href="#[3e]">Touch_ClearPress</a> from touch.o(i.Touch_ClearPress) referenced from touch.o(i.Touch_Init)
 <LI><a href="#[3f]">Touch_ClearRelease</a> from touch.o(i.Touch_ClearRelease) referenced from touch.o(i.Touch_Init)
 <LI><a href="#[3d]">Touch_DetectDoublePress</a> from touch.o(i.Touch_DetectDoublePress) referenced from touch.o(i.Touch_Init)
 <LI><a href="#[3c]">Touch_DetectHold</a> from touch.o(i.Touch_DetectHold) referenced from touch.o(i.Touch_Init)
 <LI><a href="#[3a]">Touch_DetectPress</a> from touch.o(i.Touch_DetectPress) referenced from touch.o(i.Touch_Init)
 <LI><a href="#[3b]">Touch_DetectRelease</a> from touch.o(i.Touch_DetectRelease) referenced from touch.o(i.Touch_Init)
 <LI><a href="#[38]">Touch_InputTaskEx1</a> from touch.o(i.Touch_InputTaskEx1) referenced from touch.o(i.Touch_Init)
 <LI><a href="#[43]">Touch_LoadDFConfig</a> from touch.o(i.Touch_LoadDFConfig) referenced from touch.o(i.Touch_Init)
 <LI><a href="#[39]">Touch_Reset</a> from touch.o(i.Touch_Reset) referenced from touch.o(i.Touch_Init)
 <LI><a href="#[46]">Touch_SetDoubleClickTime</a> from touch.o(i.Touch_SetDoubleClickTime) referenced from touch.o(i.Touch_Init)
 <LI><a href="#[45]">Touch_SetDoubleClickTimeAll</a> from touch.o(i.Touch_SetDoubleClickTimeAll) referenced from touch.o(i.Touch_Init)
 <LI><a href="#[44]">Touch_SetHoldTime</a> from touch.o(i.Touch_SetHoldTime) referenced from touch.o(i.Touch_Init)
 <LI><a href="#[2f]">USART1_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[30]">USART2_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[31]">USART3_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[34]">USBWakeUp_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[1d]">USB_HP_CAN1_TX_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[1e]">USB_LP_CAN1_RX0_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from stm32f10x_it.o(i.UsageFault_Handler) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[a]">WWDG_IRQHandler</a> from startup_stm32f10x_md.o(.text) referenced from startup_stm32f10x_md.o(RESET)
 <LI><a href="#[37]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f10x_md.o(.text)
 <LI><a href="#[35]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[47]">v_Run</a> from function.o(i.v_Run) referenced from main.o(i.main)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[37]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(.text)
</UL>
<P><STRONG><a name="[c4]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[4f]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[51]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[c5]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[c6]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[c7]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[c8]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[c9]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>RTCAlarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>USBWakeUp_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>USB_HP_CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>USB_LP_CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_md.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[ca]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[bb]"></a>ADC_ZeroDetectRead</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, adc.o(i.ADC_ZeroDetectRead))
<BR><BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Zdetect_Task
</UL>

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>Buzzer_ISR</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, buzzer.o(i.Buzzer_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Buzzer_ISR &rArr; Buzzer_Off
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_Off
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>

<P><STRONG><a name="[53]"></a>Buzzer_Off</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, buzzer.o(i.Buzzer_Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Buzzer_Off
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare3
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_ISR
</UL>

<P><STRONG><a name="[55]"></a>Cap1214_ButtonConfig</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cap1214.o(i.Cap1214_ButtonConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Cap1214_ButtonConfig &rArr; Cap1214_WriteRegister &rArr; Cap1214_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_WriteRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_SoftwareInit
</UL>

<P><STRONG><a name="[57]"></a>Cap1214_ButtonNoiseThreshold1</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cap1214.o(i.Cap1214_ButtonNoiseThreshold1))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Cap1214_ButtonNoiseThreshold1 &rArr; Cap1214_WriteRegister &rArr; Cap1214_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_WriteRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_SoftwareInit
</UL>

<P><STRONG><a name="[58]"></a>Cap1214_ButtonNoiseThreshold2</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cap1214.o(i.Cap1214_ButtonNoiseThreshold2))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Cap1214_ButtonNoiseThreshold2 &rArr; Cap1214_WriteRegister &rArr; Cap1214_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_WriteRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_SoftwareInit
</UL>

<P><STRONG><a name="[59]"></a>Cap1214_CalibreActive</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cap1214.o(i.Cap1214_CalibreActive))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Cap1214_CalibreActive &rArr; Cap1214_WriteRegister &rArr; Cap1214_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_WriteRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_SoftwareInit
</UL>

<P><STRONG><a name="[5a]"></a>Cap1214_CalibreEnable</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cap1214.o(i.Cap1214_CalibreEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Cap1214_CalibreEnable &rArr; Cap1214_WriteRegister &rArr; Cap1214_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_WriteRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_SoftwareInit
</UL>

<P><STRONG><a name="[5b]"></a>Cap1214_Config1</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cap1214.o(i.Cap1214_Config1))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Cap1214_Config1 &rArr; Cap1214_WriteRegister &rArr; Cap1214_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_WriteRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_SoftwareInit
</UL>

<P><STRONG><a name="[5c]"></a>Cap1214_Config2</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cap1214.o(i.Cap1214_Config2))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Cap1214_Config2 &rArr; Cap1214_WriteRegister &rArr; Cap1214_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_WriteRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_SoftwareInit
</UL>

<P><STRONG><a name="[49]"></a>Cap1214_DeInit</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cap1214.o(i.Cap1214_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Cap1214_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cap1214.o(.data)
</UL>
<P><STRONG><a name="[5e]"></a>Cap1214_GroupThreshold</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cap1214.o(i.Cap1214_GroupThreshold))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Cap1214_GroupThreshold &rArr; Cap1214_WriteRegister &rArr; Cap1214_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_WriteRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_SoftwareInit
</UL>

<P><STRONG><a name="[4e]"></a>Cap1214_ISR</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, cap1214.o(i.Cap1214_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Cap1214_ISR &rArr; Cap1214_NoiseStatus2 &rArr; Cap1214_ReadRegister &rArr; Cap1214_ReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_SetMode
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_ReadRegister
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_NoiseStatus2
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_NoiseStatus1
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_StoreBuf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cap1214.o(.data)
</UL>
<P><STRONG><a name="[48]"></a>Cap1214_Init</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, cap1214.o(i.Cap1214_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = Cap1214_Init &rArr; Cap1214_LL_Init &rArr; I2C_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_SoftwareInit
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_LL_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cap1214.o(.data)
</UL>
<P><STRONG><a name="[67]"></a>Cap1214_InterruptEnable1</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cap1214.o(i.Cap1214_InterruptEnable1))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Cap1214_InterruptEnable1 &rArr; Cap1214_WriteRegister &rArr; Cap1214_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_WriteRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_SoftwareInit
</UL>

<P><STRONG><a name="[68]"></a>Cap1214_InterruptEnable2</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cap1214.o(i.Cap1214_InterruptEnable2))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Cap1214_InterruptEnable2 &rArr; Cap1214_WriteRegister &rArr; Cap1214_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_WriteRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_SoftwareInit
</UL>

<P><STRONG><a name="[69]"></a>Cap1214_LEDControl</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cap1214.o(i.Cap1214_LEDControl))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Cap1214_LEDControl &rArr; Cap1214_WriteRegister &rArr; Cap1214_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_WriteRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_SoftwareInit
</UL>

<P><STRONG><a name="[71]"></a>Cap1214_MultiTouchConfig</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cap1214.o(i.Cap1214_MultiTouchConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Cap1214_MultiTouchConfig &rArr; Cap1214_WriteRegister &rArr; Cap1214_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_WriteRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_SoftwareInit
</UL>

<P><STRONG><a name="[60]"></a>Cap1214_NoiseStatus1</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, cap1214.o(i.Cap1214_NoiseStatus1))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Cap1214_NoiseStatus1 &rArr; Cap1214_ReadRegister &rArr; Cap1214_ReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_ReadRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_ISR
</UL>

<P><STRONG><a name="[61]"></a>Cap1214_NoiseStatus2</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, cap1214.o(i.Cap1214_NoiseStatus2))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Cap1214_NoiseStatus2 &rArr; Cap1214_ReadRegister &rArr; Cap1214_ReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_ReadRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_ISR
</UL>

<P><STRONG><a name="[72]"></a>Cap1214_ProximityControl</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cap1214.o(i.Cap1214_ProximityControl))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Cap1214_ProximityControl &rArr; Cap1214_WriteRegister &rArr; Cap1214_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_WriteRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_SoftwareInit
</UL>

<P><STRONG><a name="[73]"></a>Cap1214_QueueControl</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cap1214.o(i.Cap1214_QueueControl))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Cap1214_QueueControl &rArr; Cap1214_WriteRegister &rArr; Cap1214_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_WriteRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_SoftwareInit
</UL>

<P><STRONG><a name="[74]"></a>Cap1214_ReCalibrationConfig</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cap1214.o(i.Cap1214_ReCalibrationConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Cap1214_ReCalibrationConfig &rArr; Cap1214_WriteRegister &rArr; Cap1214_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_WriteRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_SoftwareInit
</UL>

<P><STRONG><a name="[4a]"></a>Cap1214_ReadID</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, cap1214.o(i.Cap1214_ReadID))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Cap1214_ReadID &rArr; Cap1214_ReadRegister &rArr; Cap1214_ReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_ReadRegister
</UL>
<BR>[Address Reference Count : 1]<UL><LI> cap1214.o(.data)
</UL>
<P><STRONG><a name="[62]"></a>Cap1214_ReadRegister</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, cap1214.o(i.Cap1214_ReadRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Cap1214_ReadRegister &rArr; Cap1214_ReadByte
</UL>
<BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_ReadByte
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_ReadID
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_NoiseStatus2
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_NoiseStatus1
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_ISR
</UL>

<P><STRONG><a name="[76]"></a>Cap1214_SamplingConfig</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cap1214.o(i.Cap1214_SamplingConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Cap1214_SamplingConfig &rArr; Cap1214_WriteRegister &rArr; Cap1214_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_WriteRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_SoftwareInit
</UL>

<P><STRONG><a name="[77]"></a>Cap1214_Sensor1Threshold</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cap1214.o(i.Cap1214_Sensor1Threshold))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Cap1214_Sensor1Threshold &rArr; Cap1214_WriteRegister &rArr; Cap1214_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_WriteRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_SoftwareInit
</UL>

<P><STRONG><a name="[78]"></a>Cap1214_Sensor2Threshold</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cap1214.o(i.Cap1214_Sensor2Threshold))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Cap1214_Sensor2Threshold &rArr; Cap1214_WriteRegister &rArr; Cap1214_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_WriteRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_SoftwareInit
</UL>

<P><STRONG><a name="[79]"></a>Cap1214_Sensor3Threshold</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cap1214.o(i.Cap1214_Sensor3Threshold))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Cap1214_Sensor3Threshold &rArr; Cap1214_WriteRegister &rArr; Cap1214_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_WriteRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_SoftwareInit
</UL>

<P><STRONG><a name="[7a]"></a>Cap1214_Sensor4Threshold</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cap1214.o(i.Cap1214_Sensor4Threshold))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Cap1214_Sensor4Threshold &rArr; Cap1214_WriteRegister &rArr; Cap1214_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_WriteRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_SoftwareInit
</UL>

<P><STRONG><a name="[7b]"></a>Cap1214_Sensor5Threshold</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cap1214.o(i.Cap1214_Sensor5Threshold))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Cap1214_Sensor5Threshold &rArr; Cap1214_WriteRegister &rArr; Cap1214_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_WriteRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_SoftwareInit
</UL>

<P><STRONG><a name="[7c]"></a>Cap1214_Sensor6Threshold</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cap1214.o(i.Cap1214_Sensor6Threshold))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Cap1214_Sensor6Threshold &rArr; Cap1214_WriteRegister &rArr; Cap1214_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_WriteRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_SoftwareInit
</UL>

<P><STRONG><a name="[7d]"></a>Cap1214_Sensor7Threshold</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cap1214.o(i.Cap1214_Sensor7Threshold))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Cap1214_Sensor7Threshold &rArr; Cap1214_WriteRegister &rArr; Cap1214_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_WriteRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_SoftwareInit
</UL>

<P><STRONG><a name="[5f]"></a>Cap1214_SetMode</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cap1214.o(i.Cap1214_SetMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Cap1214_SetMode &rArr; Cap1214_WriteRegister &rArr; Cap1214_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_WriteRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_SoftwareInit
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_ISR
</UL>

<P><STRONG><a name="[7e]"></a>Cap1214_SetSensitivity</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cap1214.o(i.Cap1214_SetSensitivity))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Cap1214_SetSensitivity &rArr; Cap1214_WriteRegister &rArr; Cap1214_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_WriteRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_SoftwareInit
</UL>

<P><STRONG><a name="[7f]"></a>Cap1214_SetTouch</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, cap1214.o(i.Cap1214_SetTouch))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Cap1214_SetTouch &rArr; Cap1214_WriteRegister &rArr; Cap1214_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_WriteRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_SoftwareInit
</UL>

<P><STRONG><a name="[66]"></a>Cap1214_SoftwareInit</STRONG> (Thumb, 182 bytes, Stack size 8 bytes, cap1214.o(i.Cap1214_SoftwareInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Cap1214_SoftwareInit &rArr; Cap1214_SetTouch &rArr; Cap1214_WriteRegister &rArr; Cap1214_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_WriteRegister
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_SetTouch
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_SetSensitivity
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_SetMode
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_Sensor7Threshold
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_Sensor6Threshold
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_Sensor5Threshold
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_Sensor4Threshold
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_Sensor3Threshold
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_Sensor2Threshold
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_Sensor1Threshold
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_SamplingConfig
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_ReCalibrationConfig
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_QueueControl
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_ProximityControl
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_MultiTouchConfig
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_LEDControl
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_InterruptEnable2
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_InterruptEnable1
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_GroupThreshold
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_Config2
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_Config1
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_CalibreEnable
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_CalibreActive
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_ButtonNoiseThreshold2
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_ButtonNoiseThreshold1
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_ButtonConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_Init
</UL>

<P><STRONG><a name="[56]"></a>Cap1214_WriteRegister</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, cap1214.o(i.Cap1214_WriteRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Cap1214_WriteRegister &rArr; Cap1214_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_SendData
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_SoftwareInit
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_SetTouch
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_SetSensitivity
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_SetMode
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_Sensor7Threshold
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_Sensor6Threshold
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_Sensor5Threshold
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_Sensor4Threshold
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_Sensor3Threshold
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_Sensor2Threshold
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_Sensor1Threshold
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_SamplingConfig
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_ReCalibrationConfig
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_QueueControl
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_ProximityControl
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_MultiTouchConfig
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_LEDControl
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_InterruptEnable2
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_InterruptEnable1
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_GroupThreshold
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_Config2
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_Config1
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_CalibreEnable
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_CalibreActive
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_ButtonNoiseThreshold2
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_ButtonNoiseThreshold1
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_ButtonConfig
</UL>

<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, stm32f10x_it.o(i.EXTI0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = EXTI0_IRQHandler &rArr; Zdetect_Handler &rArr; Zero_UpdateLedState &rArr; LED_On &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Zdetect_Handler
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetITStatus
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[82]"></a>EXTI_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_exti.o(i.EXTI_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_IRQHandler
</UL>

<P><STRONG><a name="[81]"></a>EXTI_GetITStatus</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f10x_exti.o(i.EXTI_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_IRQHandler
</UL>

<P><STRONG><a name="[bd]"></a>EXTI_Init</STRONG> (Thumb, 142 bytes, Stack size 0 bytes, stm32f10x_exti.o(i.EXTI_Init))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZeroEXTI_Init
</UL>

<P><STRONG><a name="[bc]"></a>GPIO_EXTILineConfig</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, stm32f10x_gpio.o(i.GPIO_EXTILineConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIO_EXTILineConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZeroEXTI_Init
</UL>

<P><STRONG><a name="[6c]"></a>GPIO_Init</STRONG> (Thumb, 278 bytes, Stack size 24 bytes, stm32f10x_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_On
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Off
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RELAY_Init
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_LL_Init
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZeroEXTI_Init
</UL>

<P><STRONG><a name="[6b]"></a>GPIO_PinRemapConfig</STRONG> (Thumb, 138 bytes, Stack size 20 bytes, stm32f10x_gpio.o(i.GPIO_PinRemapConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_PinRemapConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JTAG_Disable
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_LL_Init
</UL>

<P><STRONG><a name="[9b]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_ReadInputDataBit))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Zdetect_Handler
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;v_Run
</UL>

<P><STRONG><a name="[8c]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_ResetBits))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_On
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RELAY_Off
</UL>

<P><STRONG><a name="[8a]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_SetBits))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Off
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RELAY_On
</UL>

<P><STRONG><a name="[5d]"></a>GPIO_WriteBit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_WriteBit))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_Init
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_DeInit
</UL>

<P><STRONG><a name="[65]"></a>HAL_Delay</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, delay.o(i.HAL_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_Init
</UL>

<P><STRONG><a name="[84]"></a>HAL_GetTick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, delay.o(i.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>

<P><STRONG><a name="[93]"></a>HAL_IncTick</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, delay.o(i.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>I2C_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_i2c.o(i.I2C_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_LL_Init
</UL>

<P><STRONG><a name="[6e]"></a>I2C_DeInit</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, stm32f10x_i2c.o(i.I2C_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2C_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_LL_Init
</UL>

<P><STRONG><a name="[6f]"></a>I2C_Init</STRONG> (Thumb, 222 bytes, Stack size 48 bytes, stm32f10x_i2c.o(i.I2C_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = I2C_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_LL_Init
</UL>

<P><STRONG><a name="[88]"></a>LED_Init</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, led.o(i.LED_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LED_Init &rArr; LED_Off &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Off
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[89]"></a>LED_Off</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, led.o(i.LED_Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LED_Off &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Zero_UpdateLedState
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;v_Run
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
</UL>

<P><STRONG><a name="[8b]"></a>LED_On</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, led.o(i.LED_On))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LED_On &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Zero_UpdateLedState
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;v_Run
</UL>

<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[b0]"></a>NVIC_Init</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, misc.o(i.NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2_Configuration
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZeroEXTI_Init
</UL>

<P><STRONG><a name="[af]"></a>NVIC_PriorityGroupConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, misc.o(i.NVIC_PriorityGroupConfig))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2_Configuration
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZeroEXTI_Init
</UL>

<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2_Configuration
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_LL_Init
</UL>

<P><STRONG><a name="[85]"></a>RCC_APB1PeriphResetCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB1PeriphResetCmd))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_DeInit
</UL>

<P><STRONG><a name="[6a]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RELAY_Init
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JTAG_Disable
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_LL_Init
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZeroEXTI_Init
</UL>

<P><STRONG><a name="[86]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 192 bytes, Stack size 12 bytes, stm32f10x_rcc.o(i.RCC_GetClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
</UL>

<P><STRONG><a name="[c0]"></a>RELAY_GetStatus</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, relay.o(i.RELAY_GetStatus))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;v_Run
</UL>

<P><STRONG><a name="[8d]"></a>RELAY_Init</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, relay.o(i.RELAY_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = RELAY_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RELAY_Off
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8e]"></a>RELAY_Off</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, relay.o(i.RELAY_Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RELAY_Off
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Zdetect_Task
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RELAY_Init
</UL>

<P><STRONG><a name="[8f]"></a>RELAY_On</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, relay.o(i.RELAY_On))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RELAY_On
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Zdetect_Task
</UL>

<P><STRONG><a name="[c1]"></a>RELAY_SetStatus</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, relay.o(i.RELAY_SetStatus))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;v_Run
</UL>

<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, stm32f10x_it.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TO_ISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>SystemInit</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, system_stm32f10x.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SystemInit &rArr; SetSysClock &rArr; SetSysClockTo72
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(.text)
</UL>
<P><STRONG><a name="[26]"></a>TIM2_IRQHandler</STRONG> (Thumb, 224 bytes, Stack size 8 bytes, stm32f10x_it.o(i.TIM2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TIM2_IRQHandler &rArr; Buzzer_ISR &rArr; Buzzer_Off
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare4
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare3
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare2
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare1
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetCapture4
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetCapture3
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetCapture2
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetCapture1
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_ISR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[95]"></a>TIM_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>

<P><STRONG><a name="[ae]"></a>TIM_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2_Configuration
</UL>

<P><STRONG><a name="[96]"></a>TIM_GetCapture1</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_GetCapture1))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>

<P><STRONG><a name="[98]"></a>TIM_GetCapture2</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_GetCapture2))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>

<P><STRONG><a name="[9a]"></a>TIM_GetCapture3</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_GetCapture3))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>

<P><STRONG><a name="[9c]"></a>TIM_GetCapture4</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_GetCapture4))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>

<P><STRONG><a name="[94]"></a>TIM_GetITStatus</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, stm32f10x_tim.o(i.TIM_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>

<P><STRONG><a name="[ad]"></a>TIM_ITConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2_Configuration
</UL>

<P><STRONG><a name="[a5]"></a>TIM_OC1Init</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, stm32f10x_tim.o(i.TIM_OC1Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_OC1Init
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2_Configuration
</UL>

<P><STRONG><a name="[a6]"></a>TIM_OC1PreloadConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_OC1PreloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2_Configuration
</UL>

<P><STRONG><a name="[a7]"></a>TIM_OC2Init</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, stm32f10x_tim.o(i.TIM_OC2Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_OC2Init
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2_Configuration
</UL>

<P><STRONG><a name="[a8]"></a>TIM_OC2PreloadConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_OC2PreloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2_Configuration
</UL>

<P><STRONG><a name="[a9]"></a>TIM_OC3Init</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, stm32f10x_tim.o(i.TIM_OC3Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_OC3Init
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2_Configuration
</UL>

<P><STRONG><a name="[aa]"></a>TIM_OC3PreloadConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_OC3PreloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2_Configuration
</UL>

<P><STRONG><a name="[ab]"></a>TIM_OC4Init</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, stm32f10x_tim.o(i.TIM_OC4Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_OC4Init
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2_Configuration
</UL>

<P><STRONG><a name="[ac]"></a>TIM_OC4PreloadConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_OC4PreloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2_Configuration
</UL>

<P><STRONG><a name="[a4]"></a>TIM_PrescalerConfig</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_PrescalerConfig))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2_Configuration
</UL>

<P><STRONG><a name="[97]"></a>TIM_SetCompare1</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_SetCompare1))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>

<P><STRONG><a name="[99]"></a>TIM_SetCompare2</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_SetCompare2))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>

<P><STRONG><a name="[54]"></a>TIM_SetCompare3</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_SetCompare3))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_Off
</UL>

<P><STRONG><a name="[9d]"></a>TIM_SetCompare4</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_SetCompare4))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>

<P><STRONG><a name="[a3]"></a>TIM_TimeBaseInit</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_TimeBaseInit))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2_Configuration
</UL>

<P><STRONG><a name="[9e]"></a>TO_ClearStatus</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, timeout.o(i.TO_ClearStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = TO_ClearStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TO_Stop
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_InputTaskEx1
</UL>

<P><STRONG><a name="[92]"></a>TO_ISR</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, timeout.o(i.TO_ISR))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[b2]"></a>TO_ReadStatus</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, timeout.o(i.TO_ReadStatus))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_InputTaskEx1
</UL>

<P><STRONG><a name="[b1]"></a>TO_Start</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, timeout.o(i.TO_Start))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_InputTaskEx1
</UL>

<P><STRONG><a name="[9f]"></a>TO_Stop</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, timeout.o(i.TO_Stop))
<BR><BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TO_Task
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TO_ClearStatus
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_InputTaskEx1
</UL>

<P><STRONG><a name="[a0]"></a>TO_Task</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, timeout.o(i.TO_Task))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TO_Task
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TO_Stop
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TO_SetStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_InputTaskEx1
</UL>

<P><STRONG><a name="[42]"></a>Touch_Clear</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, touch.o(i.Touch_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Touch_Clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touch.o(i.Touch_Init)
</UL>
<P><STRONG><a name="[41]"></a>Touch_ClearDoublePress</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, touch.o(i.Touch_ClearDoublePress))
<BR>[Address Reference Count : 1]<UL><LI> touch.o(i.Touch_Init)
</UL>
<P><STRONG><a name="[40]"></a>Touch_ClearHold</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, touch.o(i.Touch_ClearHold))
<BR>[Address Reference Count : 1]<UL><LI> touch.o(i.Touch_Init)
</UL>
<P><STRONG><a name="[3e]"></a>Touch_ClearPress</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, touch.o(i.Touch_ClearPress))
<BR>[Address Reference Count : 1]<UL><LI> touch.o(i.Touch_Init)
</UL>
<P><STRONG><a name="[3f]"></a>Touch_ClearRelease</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, touch.o(i.Touch_ClearRelease))
<BR>[Address Reference Count : 1]<UL><LI> touch.o(i.Touch_Init)
</UL>
<P><STRONG><a name="[3d]"></a>Touch_DetectDoublePress</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, touch.o(i.Touch_DetectDoublePress))
<BR>[Address Reference Count : 1]<UL><LI> touch.o(i.Touch_Init)
</UL>
<P><STRONG><a name="[3c]"></a>Touch_DetectHold</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, touch.o(i.Touch_DetectHold))
<BR>[Address Reference Count : 1]<UL><LI> touch.o(i.Touch_Init)
</UL>
<P><STRONG><a name="[3a]"></a>Touch_DetectPress</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, touch.o(i.Touch_DetectPress))
<BR>[Address Reference Count : 1]<UL><LI> touch.o(i.Touch_Init)
</UL>
<P><STRONG><a name="[3b]"></a>Touch_DetectRelease</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, touch.o(i.Touch_DetectRelease))
<BR>[Address Reference Count : 1]<UL><LI> touch.o(i.Touch_Init)
</UL>
<P><STRONG><a name="[be]"></a>Touch_Init</STRONG> (Thumb, 152 bytes, Stack size 8 bytes, touch.o(i.Touch_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Touch_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[38]"></a>Touch_InputTaskEx1</STRONG> (Thumb, 310 bytes, Stack size 16 bytes, touch.o(i.Touch_InputTaskEx1))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Touch_InputTaskEx1 &rArr; TO_Task
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TO_Task
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TO_Stop
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TO_Start
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TO_ReadStatus
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TO_ClearStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touch.o(i.Touch_Init)
</UL>
<P><STRONG><a name="[43]"></a>Touch_LoadDFConfig</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, touch.o(i.Touch_LoadDFConfig))
<BR>[Address Reference Count : 1]<UL><LI> touch.o(i.Touch_Init)
</UL>
<P><STRONG><a name="[39]"></a>Touch_Reset</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, touch.o(i.Touch_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Touch_Reset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touch.o(i.Touch_Init)
</UL>
<P><STRONG><a name="[46]"></a>Touch_SetDoubleClickTime</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, touch.o(i.Touch_SetDoubleClickTime))
<BR>[Address Reference Count : 1]<UL><LI> touch.o(i.Touch_Init)
</UL>
<P><STRONG><a name="[45]"></a>Touch_SetDoubleClickTimeAll</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, touch.o(i.Touch_SetDoubleClickTimeAll))
<BR>[Address Reference Count : 1]<UL><LI> touch.o(i.Touch_Init)
</UL>
<P><STRONG><a name="[44]"></a>Touch_SetHoldTime</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, touch.o(i.Touch_SetHoldTime))
<BR>[Address Reference Count : 1]<UL><LI> touch.o(i.Touch_Init)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_md.o(RESET)
</UL>
<P><STRONG><a name="[b3]"></a>ZDetect_Init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, zdetect.o(i.ZDetect_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ZDetect_Init &rArr; ZeroEXTI_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZeroEXTI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b6]"></a>Zdetect_Delay</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, zdetect.o(i.Zdetect_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Zdetect_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Zdetect_DelayOnOff
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Zdetect_DelayOn
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Zdetect_DelayOff
</UL>

<P><STRONG><a name="[b5]"></a>Zdetect_DelayOff</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, zdetect.o(i.Zdetect_DelayOff))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Zdetect_DelayOff &rArr; Zdetect_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Zdetect_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Zdetect_Task
</UL>

<P><STRONG><a name="[b7]"></a>Zdetect_DelayOn</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, zdetect.o(i.Zdetect_DelayOn))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Zdetect_DelayOn &rArr; Zdetect_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Zdetect_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Zdetect_Task
</UL>

<P><STRONG><a name="[b8]"></a>Zdetect_DelayOnOff</STRONG> (Thumb, 54 bytes, Stack size 4 bytes, zdetect.o(i.Zdetect_DelayOnOff))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Zdetect_DelayOnOff &rArr; Zdetect_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Zdetect_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Zdetect_Task
</UL>

<P><STRONG><a name="[83]"></a>Zdetect_Handler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, zdetect.o(i.Zdetect_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Zdetect_Handler &rArr; Zero_UpdateLedState &rArr; LED_On &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Zero_UpdateLedState
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_IRQHandler
</UL>

<P><STRONG><a name="[c3]"></a>Zdetect_Off</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, zdetect.o(i.Zdetect_Off))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;v_Run
</UL>

<P><STRONG><a name="[c2]"></a>Zdetect_On</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, zdetect.o(i.Zdetect_On))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;v_Run
</UL>

<P><STRONG><a name="[ba]"></a>Zdetect_Task</STRONG> (Thumb, 452 bytes, Stack size 24 bytes, zdetect.o(i.Zdetect_Task))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Zdetect_Task &rArr; Zdetect_DelayOnOff &rArr; Zdetect_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RELAY_On
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RELAY_Off
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ZeroDetectRead
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Zdetect_DelayOnOff
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Zdetect_DelayOn
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Zdetect_DelayOff
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b4]"></a>ZeroEXTI_Init</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, zdetect.o(i.ZeroEXTI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ZeroEXTI_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_EXTILineConfig
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZDetect_Init
</UL>

<P><STRONG><a name="[b9]"></a>Zero_UpdateLedState</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, function.o(i.Zero_UpdateLedState))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Zero_UpdateLedState &rArr; LED_On &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_On
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Off
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Zdetect_Handler
</UL>

<P><STRONG><a name="[cb]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[cc]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[cd]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[35]"></a>main</STRONG> (Thumb, 144 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = main &rArr; ZDetect_Init &rArr; ZeroEXTI_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Zdetect_Task
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZDetect_Init
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Init
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RELAY_Init
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer2_Configuration
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;JTAG_Disable
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearTouch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[47]"></a>v_Run</STRONG> (Thumb, 716 bytes, Stack size 8 bytes, function.o(i.v_Run))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = v_Run &rArr; LED_On &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Zdetect_On
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Zdetect_Off
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RELAY_SetStatus
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RELAY_GetStatus
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_On
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Off
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[a1]"></a>TO_SetStatus</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, timeout.o(i.TO_SetStatus))
<BR><BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TO_Task
</UL>

<P><STRONG><a name="[bf]"></a>ClearTouch</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, main.o(i.ClearTouch))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ClearTouch
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[87]"></a>JTAG_Disable</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, main.o(i.JTAG_Disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = JTAG_Disable &rArr; GPIO_PinRemapConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinRemapConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a2]"></a>Timer2_Configuration</STRONG> (Thumb, 276 bytes, Stack size 40 bytes, main.o(i.Timer2_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Timer2_Configuration &rArr; TIM_OC4Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PrescalerConfig
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC4PreloadConfig
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC4Init
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC3PreloadConfig
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC3Init
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC2PreloadConfig
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC2Init
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1PreloadConfig
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1Init
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[90]"></a>SetSysClock</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_stm32f10x.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SetSysClock &rArr; SetSysClockTo72
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[91]"></a>SetSysClockTo72</STRONG> (Thumb, 214 bytes, Stack size 12 bytes, system_stm32f10x.o(i.SetSysClockTo72))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>

<P><STRONG><a name="[4b]"></a>Cap1214_CheckBuf</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cap1214.o(i.Cap1214_CheckBuf))
<BR>[Address Reference Count : 1]<UL><LI> cap1214.o(.data)
</UL>
<P><STRONG><a name="[4d]"></a>Cap1214_ClearBuf</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, cap1214.o(i.Cap1214_ClearBuf))
<BR>[Address Reference Count : 1]<UL><LI> cap1214.o(.data)
</UL>
<P><STRONG><a name="[4c]"></a>Cap1214_GetBuf</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, cap1214.o(i.Cap1214_GetBuf))
<BR>[Address Reference Count : 1]<UL><LI> cap1214.o(.data)
</UL>
<P><STRONG><a name="[64]"></a>Cap1214_LL_Init</STRONG> (Thumb, 230 bytes, Stack size 24 bytes, cap1214.o(i.Cap1214_LL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = Cap1214_LL_Init &rArr; I2C_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinRemapConfig
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_DeInit
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_Init
</UL>

<P><STRONG><a name="[75]"></a>Cap1214_ReadByte</STRONG> (Thumb, 522 bytes, Stack size 20 bytes, cap1214.o(i.Cap1214_ReadByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Cap1214_ReadByte
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_ReadRegister
</UL>

<P><STRONG><a name="[80]"></a>Cap1214_SendData</STRONG> (Thumb, 322 bytes, Stack size 16 bytes, cap1214.o(i.Cap1214_SendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Cap1214_SendData
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_WriteRegister
</UL>

<P><STRONG><a name="[63]"></a>Cap1214_StoreBuf</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, cap1214.o(i.Cap1214_StoreBuf))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cap1214_ISR
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
